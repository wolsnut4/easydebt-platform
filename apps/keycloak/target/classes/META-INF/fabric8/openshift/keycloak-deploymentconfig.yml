---
apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    configmap.fabric8.io/update-on-change: keycloak
    fabric8.io/target-platform: openshift
  labels:
    app: keycloak
    provider: fabric8
    version: 1.0-SNAPSHOT
    group: io.clarksnut.platform.apps
  name: keycloak
spec:
  replicas: 1
  strategy:
    rollingParams:
      timeoutSeconds: 7200
    type: Rolling
  template:
    metadata:
      annotations:
        pod.beta.kubernetes.io/init-containers: |-
          [{
            "name": "git-cloner",
            "image": "fabric8/builder-clients:0.11",
            "imagePullPolicy": "IfNotPresent",
            "command": [ "/bin/bash" ],
            "args": [
              "-c",
              "rm -rf /keycloak-theme/login && git clone https://github.com/clarksnut/clarksnut-keycloak-theme.git /keycloak-theme/login && cd /keycloak-theme/login"
            ],
            "volumeMounts": [{
              "name": "keycloak-theme",
              "mountPath": "/keycloak-theme"
            }]
          },
          {
            "name": "openshift-ca-pemtokeystore",
            "image": "jimmidyson/pemtokeystore:v0.2.0",
            "imagePullPolicy": "IfNotPresent",
            "args": [
              "-keystore", "/tls-keystore/openshift-truststore.jks",
              "-ca-file", "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
              "-ca-file", "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt",
              "-ca-dir", "/usr/share/ca-certificates/mozilla"
            ],
            "volumeMounts": [{
              "name": "keycloak-tls",
              "mountPath": "/tls-keystore"
            }]
          },
          {
            "name": "envvar-substitution",
            "image": "fabric8/envsubst-file:1.0.0",
            "imagePullPolicy": "IfNotPresent",
            "args": [
              "clarksnut-realm.json"
            ],
            "env": [{
              "name": "AUTH_URL",
              "valueFrom": {
                      "configMapKeyRef": {
                          "name": "keycloak",
                          "key": "auth.api.url"
                      }
                  }
            },
            {
              "name": "CLARKSNUT_URL",
              "valueFrom": {
                      "configMapKeyRef": {
                          "name": "keycloak",
                          "key": "clarksnut.api.url"
                      }
                  }
            },
            {
              "name": "KEYCLOAK_URL",
              "valueFrom": {
                      "configMapKeyRef": {
                          "name": "keycloak",
                          "key": "keycloak.url"
                      }
                  }
            },
            {
              "name": "CLARKSNUTUI_URL",
              "valueFrom": {
                      "configMapKeyRef": {
                          "name": "keycloak",
                          "key": "clarksnutui.url"
                      }
                  }
            },
            {
              "name": "KEYCLOAK_PRIVATEKEY",
              "valueFrom": {
                      "secretKeyRef": {
                          "name": "keycloak",
                          "key": "kc.private.key"
                      }
                  }
            },
            {
              "name": "KEYCLOAK_PUBLICKEY",
              "valueFrom": {
                      "secretKeyRef": {
                          "name": "keycloak",
                          "key": "kc.public.key"
                      }
                  }
            },
            {
              "name": "KEYCLOAK_CLIENTID_SECRET",
              "valueFrom": {
                      "secretKeyRef": {
                          "name": "keycloak",
                          "key": "kc.clientid.secret"
                      }
                  }
            },
            {
              "name": "K8S_API_SERVER",
              "valueFrom": {
                      "configMapKeyRef": {
                          "name": "keycloak",
                          "key": "apiserver.url"
                      }
                  }
            },
            {
              "name": "HIDE_OPENSHIFT_BTN",
              "value": "false"
            },
            {
              "name": "HIDE_GITHUB_BTN",
              "value": "true"
            }],
            "volumeMounts": [
            {
              "name": "keycloak-config",
              "mountPath": "/workdir/clarksnut-realm.json",
              "subPath": "config/clarksnut-realm.json"
            },
            {
              "name": "keycloak-subst-config",
              "mountPath": "/processed"
            }
            ]
          },
          {
              "name": "init-dependencyservice",
              "image": "fabric8/fabric8-dependency-wait-service:v6632df1",
              "imagePullPolicy": "IfNotPresent",
              "command": ["sh", "-c", "fabric8-dependency-wait-service-linux-amd64 postgres://keycloak@keycloak-db:5432"],
              "env": [{
                "name": "DEPENDENCY_POLL_INTERVAL",
                "value": "1"
              }, {
                "name": "DEPENDENCY_LOG_VERBOSE",
                "value": "true"
              }]
          }]
      labels:
        app: keycloak
        provider: fabric8
        version: 1.0-SNAPSHOT
        group: io.clarksnut.platform.apps
    spec:
      containers:
      - args:
        - -b $(INTERNAL_POD_IP)
        - -Djgroups.bind_addr=global
        - -Djboss.node.name=$(INTERNAL_POD_IP)
        - -Djavax.net.ssl.trustStore=/opt/jboss/keycloak/standalone/configuration/tls/openshift-truststore.jks
        - -Dkeycloak.migration.action=import
        - -Dkeycloak.migration.provider=singleFile
        - -Dkeycloak.migration.file=/opt/jboss/keycloak/standalone/configuration/import/clarksnut-realm.json
        - -Dkeycloak.migration.strategy=IGNORE_EXISTING
        env:
        - name: POSTGRES_HOSTNAME
          value: keycloak-db
        - name: POSTGRES_USER
          value: keycloak
        - name: POSTGRES_PASSWORD
          value: keycloak
        - name: OPERATING_MODE
          value: standalone
        - name: POSTGRES_PORT_5432_TCP_ADDR
          value: keycloak-db
        - name: INTERNAL_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              key: kc.user
              name: keycloak
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: kc.password
              name: keycloak
        - name: KEYCLOAK_CLIENTID_SECRET
          valueFrom:
            secretKeyRef:
              key: kc.clientid.secret
              name: keycloak
        - name: KEYCLOAK_PRIVATEKEY
          valueFrom:
            secretKeyRef:
              key: kc.private.key
              name: keycloak
        - name: KEYCLOAK_PUBLICKEY
          valueFrom:
            secretKeyRef:
              key: kc.public.key
              name: keycloak
        - name: HIDE_GOOGLE_BTN
          value: "false"
        image: fabric8/keycloak-postgres:v15751c8
        livenessProbe:
          httpGet:
            path: /auth
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 10
        name: keycloak
        readinessProbe:
          httpGet:
            path: /auth
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: /opt/jboss/keycloak/standalone/configuration/tls
          name: keycloak-tls
        - mountPath: /opt/jboss/keycloak/standalone/configuration/import
          name: keycloak-subst-config
        - mountPath: /opt/jboss/keycloak/themes/clarksnut
          name: keycloak-theme
      volumes:
      - emptyDir: {}
        name: keycloak-tls
      - emptyDir: {}
        name: keycloak-subst-config
      - configMap:
          items:
          - key: clarksnut-realm.json
            path: config/clarksnut-realm.json
          name: keycloak
        name: keycloak-config
      - emptyDir: {}
        name: keycloak-theme
